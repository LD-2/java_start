这样情况下 会有什么问题
可以看出，UserDaoImplForMySQL中主要是连接MySQL数据库进行操作。
如果更换到Oracle数据库上，则需要再提供一个UserDaoImplForOracle
很明显，以上的操作正在进行功能的扩展，添加了一个新的类UserDaoImplForOracle来应付数据库的变化，
这里的变化会引起连锁反应吗？当然会，如果想要切换到Oracle数据库上，UserServiceImpl类代码就需要修改

这样一来就违背了开闭原则OCP。
开闭原则是这样说的：在软件开发过程中应当对扩展开放，对修改关闭。
也就是说，如果在进行功能扩展的时候，添加额外的类是没问题的，但因为功能扩展而修改之前运行正常的程序，这是忌讳的，不被允许的。
因为一旦修改之前运行正常的程序，就会导致项目整体要进行全方位的重新测试。
这是相当麻烦的过程。
导致以上问题的主要原因是：代码和代码之间的耦合度太高。

可以很明显的看出，上层是依赖下层的。
UserController依赖UserServiceImpl
而UserServiceImpl依赖UserDaoImplForMySQL
这样就会导致下面只要改动，上面必然会受牵连（跟着也会改），所谓牵一发而动全身。
这样也就同时违背了另一个开发原则：依赖倒置原则。

