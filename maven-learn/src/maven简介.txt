软件是一个工程
工程的构键是有步骤的
maven是项目的管理工具

软件开发需要编译代码 开发人员自己测试代码 把代码打包 部署到测试服务器 测试人员测试功能 测试人员测试出bug
开发人员修改bug 自己测试代码 打包代码 部署到测试服务器 测试人员测试 发现bug 一直循环往复直到 没有bug测试成功符合功能
上述过程需要重复多次 大型项目中构建项目比较复杂 有很多的配置文件jar文件 多个子项目等 都需要费人力等 效率低 maven则改善了
maven是自动化构键工具

传统开发项目的问题，没有使用maven管理的项目
1、很多模块，模块之间有关系，手工管理关系比较麻烦
2、需要很多的第三方功能，需要很多jar文件，需要手动找jar包导入项目
3、需要手动管理jar包的版本
4、需要jar文件之间的依赖 比如 项目需要的a.jar  需要  现有 b.jar中的类才可以正常运行
   a.jar需要b.jar这个关系叫依赖 或者项目需要mysql驱动 就是项目 依赖 mysql驱动

使用maven管理的项目  maven项目
1、maven可以管理jar文件
2、自动下载jar和其文档源代码
3、更方便管理jar包的版本
4、管理jar直接的依赖 jar需要什么依赖 maven会自动下载
5、帮忙编译java文件 把java编译为class
6、帮忙打包 jar包(普通java程序) 或者 war包(web项目)
7、帮忙部署项目 把项目部署到仓库

构键 项目的构键
构键是面向过程的 是一些步骤 完成项目代码的编译 测试 运行 打包 安装 部署 等等
maven支持的构键有
1、清理：把之前项目编译的东西删除 为新的编译做准备
2、编译：把源代码编译为执行代码 java->class 批量的 maven可以同时把成百上千的java文件编译为class  javac 一次 只能编译一个
3、测试：maven可执行测试程序代码，验证功能的正确性  批量的 maven可同时执行多个测试代码 同时测试很多功能
4、报告：生成测试结果文件，测试通过与否
5、打包：把项目中所有的class文件，配置文件等所有资源都放到一个压缩文件中 这个压缩文件就是项目的结果文件 通常Java程序压缩的扩展名 .jar  web项目的压缩扩展名.war
6、安装：把生成的jar 或者 war安装到本地仓库
7、部署：把程序安装好可以执行
