适配器设计模式adapter

一般不写servlet的构造方法 init方法就可以用了 因为tomcat执行的是servlet的无参构造方法

service方法常用
为了使代码简洁可以写一个用适配器的思想设计代码
写一个Generic的Servlet接口实现Servlet
写Servlet实例对象时针对常用的service方法重写即可

init的特点可以使得此方法中放置一些资源创建的操作比如数据库的连接等
destroy的特点可以使得此方法中放置一些servlet对象关闭使用过的资源的操作 比如关闭数据库 文件输入输出流
这个利用也有利于事务的操作
如果servlet实现类中没有编写无参构造方法tomcat就无法创建servlet对象 则会报500错误 500是一个http协议的错误代码状态码 500服务器内部错误 服务器端java程序出现了异常

编写一个servlet实现类就实现一次servlet类的缺点是代码很丑陋因为最常用的只有service方法
因此这里采用适配器设计模式adapter 编写一个抽象的GenericServlet实现类 其中有一个抽象方法service方法
GenericServlet抽象类实现了Servlet接口
GenericServlet是一个适配器
以后所有的servlet实现类继承GenericServlet即 实现service方法

servletConfig是由tomcat创建的对象
init方法中有传入的参数servletConfig和此参数的获取方法 说明此参数应该是GenericServlet类中的私有成员变量
且为了保证此功能可以执行把init方法写成了final类型的
则想要重写init方法就要在GenericServlet类中重载一个init方法并且归为到有参数的init比执行的方法中 在实现类中就可以重写init方法了
因为servletConfig是由tomcat创建的对象  servletConfig在GenericServlet中是私有成员变量 而且有public 方法获得此数据

输出一个引用时会自动调取它的toString方法
