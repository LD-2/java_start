动态代理: 基于反射机制
掌握的程度:
    什么是动态代理？
        使用jdk反射机制，创建对象的能力，创建的是代理类的对象，而不用你创建类文件。不用写java代理类了
        动态: 在程序执行的时候，调用jdk提供的方法才能创建创建代理类的对象，可以给不同的目标类创建代理对象 jdk中的类操作的  不用写相对应的代理类了
        动态代理其实就是 jdk运行期间，动态创建class字节码并加载到JVM中
        动态代理的实现方法常用的有两种方式：
        1、使用jdk代理
            jdk动态代理是基于Java的反射机制实现的，使用jdk中的接口和类实现代理对象的动态创建。
            jdk的动态要求目标对象必须实现接口，这个是java设计上的要求。
            从jdk1.3来，java语言通过java.lang.reflect包提供的三个类支持代理模式Proxy，Method和InvocationHandler接口
        2、通过CGLIB动态代理
            cglib是第三方工具库，创建代理对象
            cglib的原理是继承，cglib通过继承目标类，创建其子类，在子类中重写方法，修改功能
            因为cglib的要求是继承目标类 因此 目标类不能是final 方法也不能是final
            cglib在  很多框架中应用 比如 mybatis  spring等框架
    动态代理可以做什么？
········可以在不改变原来目标方法功能的前提下，可以在代理中增强自己的功能代码。
········程序开发中的意思。
········比如：你所在的项目中，有一个功能是其他人（公司的其它部门，其它小组的人)写好的，
········你可以使用。GoNong.class, GoNong gn - new GoNong(), gn.print();
········你发现这个功能,现在还缺点, 不能完全满足我项目的需要。
········我需要在gn.print()执行后,需要自己在增加代码。
········用代理实现gn.print ()调用时,增加自己代码,而不用去改原来的GoNong文件。
········
········jdk动态代理,必须有接口,目标类必须实现接口,没有接口时,需要使用cglib动态代理



        InvocationHandle接口
        invocationHandle接口叫做调用处理器，负责完成调用目标方法，并增强功能
        通过代理对象执行目标接口中的方法，会把方法的调用分派给调用处理器（InvocationHandle）的实现类，执行实现类中的invoke()方法，
        因此只需把功能代码写到invoke()方法中即可


代理:
    1.代理代购，中介，换ip，商家等等比如有一家美国的大学，可以对全世界招生。
     留学中介（代理）留学中介(代理): 帮助这家美国的学校招生,中介是学校的代理，中介是代替学校完成招生功能。
代理特点：
1. 中介和代理他们要做的事情是一致的：招生。
2,中介是学校代理,学校是目标。
3·家长---中介（学校介绍，办入学手续）----美国学校。
4,中介是代理，不能白干活，需要收取费用。
5.代理不让你访问到目标。

为什么要找中介?
1,中介是专业的,方便
2. 家长现在不能自己去找学校。家长没有能力访问学校。 或者美国学校不接收个人来访。买东西都是商家卖，商家是某个商品的代理，你个人买东西，肯定不会让你接触到厂家的。

实际的例子：
登录，注册有验证码，验证码是手机短信。
中国移动，联通能发短信。
中国移动,联通能有子公司,或者关联公司,
他们面向社会提供短信的发送功能张三项目发送短信---子公司，或者关联公司-----中国移动，联通.
在开发中也会有这样的情况，你有a类，本来是调用c类的方法，完成某个功能。
但是c不让a调用。不能调用c的方法。
在a和c直间创建一个b代理，c让b访问。
a--访问b---访问c

4.实现代理的方式
1.静态代理 ：
1) 代理类是自己手工实现的,自己创建一个java类,表示代理类。
2）同时你所要代理的目标类是确定的。
    特点: 1)实现简单
        2)容易理解。
    缺点:
        当你的项目中，目标类和代理类多时候 会有以下问题
        1、当目标类多了 代理类可能会成倍的增加，代理类数量增加
        2、当接口中的功能多了，或者修改了，会影响众多的实现类，厂家类，代理类都要修改影响较多
模拟一个用户购买u盘的行为。
用户是客户端类商家:代理,代理某个品牌的u盘。
厂家：目标类。
三者的关系: 用户（客户端）---商家（代理）---厂家（目标）
商家和厂家都是卖u盘的,他们完成的功能是一致的，都是卖u盘。
实现步骤：
1,创建一个接口,定义卖u盘的方法,表示你的厂家和商家做的事情。
2. 创建厂家类，实现1步骤的接口
3. 创建商家，就是代理，也需要实现1步骤中的接口。
4.创建客户端类，调用商家的方法买一个u盘。

代理类完成的功能：
    目标类中方法的调用
    功能增强

动态代理：
    在静态代理中目标类很多的时候 可以使用动态代理，避免静态代理的缺点
    1、动态代理中目标类即使很多，代理类的数量可以很少。2、当修改了接口中的方法时，不会影响代理类。

动态代理指在程序的运行中，使用jdk的反射机制，创建代理类对象，并动态的指定要代理的目标类
也就是说 动态代理是一种创建java对象的能力，可以不用创建指定的代理类就可以创建代理类对象

    在java中，创建对象：
    1、创建类文件 java编译为class
    2、使用构造方法，创建类对象
