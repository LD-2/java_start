<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.mirror</groupId>
  <artifactId>maven03</artifactId>
  <packaging>war</packaging>
  <version>1.1-SNAPSHOT</version>
  <name>maven03 Maven Webapp</name>
  <url>http://maven.apache.org</url>

  <properties>
    <!--    maven构建项目使用的utf-8 避免中文乱码-->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <!--    编译java代码使用的jdk版本-->
    <maven.compiler.target>18</maven.compiler.target>
    <!--    你的java项目应该运行的jdk版本-->
    <maven.compiler.source>18</maven.compiler.source>
<!--    自定义全局变量-->
    <tomcat.scope>provided</tomcat.scope>
  </properties>
  <dependencies>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>

    <!--servlet-->
    <dependency>
      <groupId>jakarta.servlet</groupId>
      <artifactId>jakarta.servlet-api</artifactId>
      <version>5.0.0</version>
      <scope>${tomcat.scope}</scope>
    </dependency>
    <!--jsp-->
    <dependency>
      <groupId>jakarta.servlet.jsp</groupId>
      <artifactId>jakarta.servlet.jsp-api</artifactId>
      <version>3.0.0</version>
      <scope>${tomcat.scope}</scope>
    </dependency>
    <!--jstl-->
    <dependency>
      <groupId>jakarta.servlet.jsp.jstl</groupId>
      <artifactId>jakarta.servlet.jsp.jstl-api</artifactId>
      <version>2.0.0</version>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>3.2.2</version>
      </plugin>
    </plugins>
    <resources>
      <resource>
        <directory>src/main/java</directory>
        <!--所在的目录-->
        <includes>
          <!--包括目录下的.properties,.xml文件都会扫描到-->
          <include>**/*.properties</include>
          <include>**/*.xml</include>
          <include>**/*.txt</include>
        </includes>
        <!--filtering选项false不启用过滤器, *.property已经起到过滤的作用了-->
        <filtering>false</filtering>
      </resource>
    </resources>
  </build>
</project>
